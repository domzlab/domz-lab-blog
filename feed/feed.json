{
	"version": "https://jsonfeed.org/version/1.1",
	"title": "domzlab",
	"language": "en",
	"home_page_url": "https://domzlab.com/",
	"feed_url": "https://domzlab.com/feed/feed.json",
	"description": "A blog where I write about things that I am learning.",
	"author": {
		"name": "Dominic Manthoko",
		"url": "https://domzlab.com/about-me/"
	},
	"items": [
		{
			"id": "https://domzlab.com/blog/testing_out_elastic_beanstalk/",
			"url": "https://domzlab.com/blog/testing_out_elastic_beanstalk/",
			"title": "Deploying a NodeJs application on Elastic Beanstalk",
			"content_html": "<h3 id=\"introduction\" tabindex=\"-1\">Introduction <a class=\"header-anchor\" href=\"https://domzlab.com/blog/testing_out_elastic_beanstalk/\">#</a></h3>\n<p>I've recently started preparing to write AWS Certified DevOps Engineer Professional Exam. I'm currently studying through a course of ACloudGuru that helps you prepare to sit for the exam.</p>\n<p>One of the topics covered in this course is Elastic Beanstalk. In my work as Cloud Support Engineer, I have yet come encounter a situation where I need to troubleshoot issues with this service. Thus, to get a general idea of how this service works, I thought it would be a good idea to see how one would go about deploying a NodeJs application on Elastic Beanstalk.</p>\n<h3 id=\"development-environment\" tabindex=\"-1\">Development Environment <a class=\"header-anchor\" href=\"https://domzlab.com/blog/testing_out_elastic_beanstalk/\">#</a></h3>\n<pre class=\"language-sh\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"token function\">mkdir</span> simple-app\n<span class=\"token builtin class-name\">cd</span> simple app\n<span class=\"token function\">touch</span> index.js</code></pre>\n<p>Theafter, run <code>eb init -</code></p>\n<p>Select a default region\nselected 4) eu-west-1 : EU (Ireland)</p>\n<p>Note, you would type the number you want to select, then hit enter to move to the next option.</p>\n<p>Select an application to use\nselected 3) [ Create new Application ]</p>\n<p>Enter Application Name</p>\n<p>Select a platform branch.\nselected 6) Node.js</p>\n<p>selected option 1) Node.js 18 running on 64bit Amazon Linux 2023</p>\n<h3 id=\"references\" tabindex=\"-1\">References: <a class=\"header-anchor\" href=\"https://domzlab.com/blog/testing_out_elastic_beanstalk/\">#</a></h3>\n<p>[1] Deploying an Express application to Elastic Beanstalk - https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_express.html\n[2] https://www.digitalocean.com/community/tutorials/how-to-create-a-web-server-in-node-js-with-the-http-module</p>\n",
			"date_published": "2023-12-03T12:32:48Z"
		}
		,
		{
			"id": "https://domzlab.com/blog/create-website/",
			"url": "https://domzlab.com/blog/create-website/",
			"title": "Create 11ty static website from template",
			"content_html": "<h3 id=\"introduction\" tabindex=\"-1\">Introduction <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>In this post, I provide an overview of how I used the 11ty base theme as the starting point of this blog.</p>\n<h3 id=\"pre-requisites\" tabindex=\"-1\">Pre Requisites <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>To authorize requests to github when running commands from terminal e.g. cloning, git push/pull etc, I am using SSH keys. Ensure that you have configured an SSH key in GitHub.</p>\n<p>To have the same setup on your end, you can follow these guides from the GitHub documentation:</p>\n<ul>\n<li><a href=\"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\">Generate an SSH key</a></li>\n<li><a href=\"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account\">Add a new SSH key to your GitHub account</a></li>\n</ul>\n<p>I also recommend using VS Code as your code editor. Feel free to use any code/text editor of your choice.</p>\n<h3 id=\"create-repository-from-template\" tabindex=\"-1\">Create Repository from Template <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>The template I used for this site is the <a href=\"https://github.com/11ty/eleventy-base-blog\">eleventy base blog</a>.</p>\n<p>Using the link above to view the eleventy-base-blog in github.</p>\n<p><img src=\"https://domzlab.com/img/create_website_blog/1_11ty_base_blog.png\" alt=\"use template eleventy base blog\"></p>\n<p>Select <em><strong>Use this template</strong></em> →  <em><strong>Create a new repository</strong></em></p>\n<p>On the <em><strong>Create a new repository</strong></em> page, specify a name for your name repository. Then select <em><strong>Create repository</strong></em>.</p>\n<p><img src=\"https://domzlab.com/img/create_website_blog/2_create_repository.png\" alt=\"create new repository from template\"></p>\n<h3 id=\"clone-repository-and-run-server-locally\" tabindex=\"-1\">Clone repository and run server locally <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>On your local machine, clone the newly created repository in a directory on your choice.</p>\n<p>Command to clone respository to your local machine: <strong><code>git clone git@github.com:&lt;USER-NAME&gt;/&lt;REPOSITORY-NAME&gt;.git</code></strong></p>\n<p>Before we begin modifying the code, first, we shall run the server locally. Run <strong><code>npm install</code></strong> to install the depdencies.</p>\n<p>Thereafrer, to run the server locally, run <strong><code>npm start</code></strong>.</p>\n<h3 id=\"update-code-base\" tabindex=\"-1\">Update code base <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>In package.json, update the pathprefix seen in the <strong>build-ghpages</strong> script to be the same as your respository name:</p>\n<pre><code>&quot;build-ghpages&quot;: &quot;npx @11ty/eleventy --pathprefix=/noname-blog/&quot;\n</code></pre>\n<p>Thereafter, remove <strong>package-lock.json</strong> from .gitignore.</p>\n<p>In the root of your repository, create a folder named <strong>.github</strong>. Then, inside that folder, create a sub-directory named <strong>workflows</strong>.</p>\n<p>Using the YAML below, create the file <em><strong>.github/workflows/build-and-deploy.yml</strong></em> in the newly created directory.</p>\n<pre class=\"language-yaml\" tabindex=\"0\"><code class=\"language-yaml\"><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Build and Deploy\n<span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>push<span class=\"token punctuation\">]</span>\n<span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">build-and-deploy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> ubuntu<span class=\"token punctuation\">-</span>latest\n    <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Checkout\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install and Build\n        <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n          npm ci\n          npm run build-ghpages</span>\n\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Deploy\n        <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> peaceiris/actions<span class=\"token punctuation\">-</span>gh<span class=\"token punctuation\">-</span>pages@v3\n        <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">publish_dir</span><span class=\"token punctuation\">:</span> ./_site\n          <span class=\"token key atrule\">github_token</span><span class=\"token punctuation\">:</span> $<span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> secrets.GITHUB_TOKEN <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></code></pre>\n<h3 id=\"deploy-code\" tabindex=\"-1\">Deploy Code <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>After making the above changes, deploy your code:</p>\n<pre class=\"language-sh\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token parameter variable\">-A</span>\n<span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"Update package.json. Add build file.\"</span>\n<span class=\"token function\">git</span> push</code></pre>\n<p>After running the above, navigate to your github respository on github.com. You should then see a red x next to the short code of your most recent commit. You may need to wait for a few more minutes to see this.</p>\n<p>The red x indicates that there was an issue with your most recent build. Select the red x to see more details.</p>\n<p><img src=\"https://domzlab.com/img/create_website_blog/4_check_build_result.png\" alt=\"Build failure about code push\"></p>\n<p>When you select <strong>Details</strong>, this will take you to the Actions tab, and provide more details regarding why the build failed. In this case, a 403 error was being returned.</p>\n<p><img src=\"https://domzlab.com/img/create_website_blog/5_build_failed.png\" alt=\"Build failure about code push\"></p>\n<h3 id=\"update-permissions\" tabindex=\"-1\">Update Permissions <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>To resolve the error, you will need to go to Settings →  Action → General  →  Workflow permissions  → choose <strong>read and write permissions</strong> [1].</p>\n<p>Thereafter, re-run your failed build job. To do this, go to Actions, and under All workflow, you should see the build that failed. This would have the same value/name used in your commit message. In my case, this was <strong>Update package.json. Add build file</strong>. The name of the workflow that run would be the same as the commit message.</p>\n<p>Now, select the workflow that failed to run, then seelect Re-run all jobs. Therefore, the build should complete successfully.</p>\n<p>What you will see is that a new branch named gh-pages got create. This will be branch specified when configuring github pages as described further below.</p>\n<h3 id=\"enable-github-pages\" tabindex=\"-1\">Enable GitHub Pages <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>To enable GitHub pages on your GitHub repository, navigate to your respository, and select the <strong>Settings</strong>. From the left navigation menu, select <strong>Pages</strong>.</p>\n<p>On the <strong>GitHub Pages</strong> settings page that appears, configure the following:</p>\n<pre><code>Source: Deploy from Branch\nBranch: gh-pages\n</code></pre>\n<p>Then select save. After some time (waited for a minute or so on my end), refresh the page, and you should then be able to see the link to your static website</p>\n<p><img src=\"https://domzlab.com/img/create_website_blog/7_github_pages_link.png\" alt=\"GitHub pages link\"></p>\n<p>With that, you have deployed an 11ty website hosted on GitHub pages. You site would look similar to the one shown below.</p>\n<p><img src=\"https://domzlab.com/img/create_website_blog/8_11ty_site.png\" alt=\"11ty site\"></p>\n<h3 id=\"references\" tabindex=\"-1\">References <a class=\"header-anchor\" href=\"https://domzlab.com/blog/create-website/\">#</a></h3>\n<p>[1] “Permission denied to github-actions[bot]. The requested URL returned error: 403,” Stack Overflow. https://stackoverflow.com/questions/73687176/permission-denied-to-github-actionsbot-the-requested-url-returned-error-403 (accessed Sep. 05, 2023).</p>\n",
			"date_published": "2023-12-03T12:31:57Z"
		}
		
	]
}
