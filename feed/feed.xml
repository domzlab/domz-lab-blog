<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:base="en">
	<title>domzlab</title>
	<subtitle>A blog where I write about things that I am learning.</subtitle>
	<link href="https://domzlab.com/feed/feed.xml" rel="self"/>
	<link href="https://domzlab.com/"/>
	<updated>2023-12-04T12:50:56Z</updated>
	<id>https://domzlab.com/</id>
	<author>
		<name>Dominic Manthoko</name>
		<email>domzlab523@gmail.com</email>
	</author>
	
	<entry>
		<title>Deploying a NodeJs application on Elastic Beanstalk</title>
		<link href="https://domzlab.com/blog/testing_out_elastic_beanstalk/"/>
		<updated>2023-12-04T12:50:56Z</updated>
		<id>https://domzlab.com/blog/testing_out_elastic_beanstalk/</id>
		<content type="html">&lt;h3 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;Introduction &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/testing_out_elastic_beanstalk/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I&#39;ve recently started preparing for the AWS Certified DevOps Engineer Professional Exam. I&#39;m currently studying through a course on ACloudGuru that helps you prepare to sit for the exam.&lt;/p&gt;
&lt;p&gt;One of the topics covered in this course is Elastic Beanstalk. In my work as Cloud Support Engineer, I have yet come encounter a situation where I need to troubleshoot issues with this service. Thus, to get a general idea of how this service works, I thought it would be a good idea to see how one would go about deploying a NodeJs application on Elastic Beanstalk.&lt;/p&gt;
&lt;h3 id=&quot;setting-up-my-development-environment&quot; tabindex=&quot;-1&quot;&gt;Setting up my Development Environment &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/testing_out_elastic_beanstalk/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To create and deploy updates to an Elastic Beanstalk environment, I was using Elastic Beanstalk Command Line Interface (EB CLI) is a command line client. I used the setup scripts seen in [1] to install the EB CLI to my local machine.&lt;/p&gt;
&lt;p&gt;To get started, I created a new directory for your project files. In the newly created directory, I then added an index.js file. Below are the commands I used to do this from command line.&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;&lt;span class=&quot;token function&quot;&gt;mkdir&lt;/span&gt; simple-app
&lt;span class=&quot;token builtin class-name&quot;&gt;cd&lt;/span&gt; simple app&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thereafter, I used the EB CLI command &lt;code&gt;eb init -i&lt;/code&gt; to set the default values for my elastic beanstalk environment. Below are the options that I selected:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;$ eb init &lt;span class=&quot;token parameter variable&quot;&gt;-i&lt;/span&gt;

Select a default region
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; us-east-1 &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; US East &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;N. Virginia&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; us-west-1 &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; US West &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;N. California&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; us-west-2 &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; US West &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Oregon&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; eu-west-1 &lt;span class=&quot;token builtin class-name&quot;&gt;:&lt;/span&gt; EU &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Ireland&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;.
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default is &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;


Select an application to use
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; simple-app
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; first-servers
&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; nodejs-example-express-rds
&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt; Create new Application &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default is &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;


Enter Application Name
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default is &lt;span class=&quot;token string&quot;&gt;&quot;simple-app2&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: 
Application simple-app2 has been created.
Select a platform.
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; .NET Core on Linux
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; .NET on Windows Server
&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Docker
&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Go
&lt;span class=&quot;token number&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Java
&lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Node.js
&lt;span class=&quot;token number&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; PHP
&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Packer
&lt;span class=&quot;token number&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Python
&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Ruby
&lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Tomcat
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;make a selection&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;6&lt;/span&gt;

Select a platform branch.
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Node.js &lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt; running on 64bit Amazon Linux &lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Node.js &lt;span class=&quot;token number&quot;&gt;18&lt;/span&gt; running on 64bit Amazon Linux &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Node.js &lt;span class=&quot;token number&quot;&gt;16&lt;/span&gt; running on 64bit Amazon Linux &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Deprecated&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; Node.js &lt;span class=&quot;token number&quot;&gt;14&lt;/span&gt; running on 64bit Amazon Linux &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Deprecated&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default is &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;

Cannot setup CodeCommit because there is no Source Control setup, continuing with initialization
Do you want to &lt;span class=&quot;token builtin class-name&quot;&gt;set&lt;/span&gt; up SSH &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; your instances?
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Y/n&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: n&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note, you would type the number you want to select, then hit enter to move to the next option.&lt;/p&gt;
&lt;h3 id=&quot;application-code&quot; tabindex=&quot;-1&quot;&gt;Application Code &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/testing_out_elastic_beanstalk/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Still in the simple-app directory, I created a file named index.js. I used code below:&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; http &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;http&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; host &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; port &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;requestListener&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; res&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; server &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;requestListener&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;port&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; host&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Server is running on http://&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;host&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;port&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To test this simple server, I ran &lt;code&gt;node index.js&lt;/code&gt;. Then, in another terminal window, ran curl localhost:8080. The output returned was as follows:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;$ &lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; localhost:8080

Hello World&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;deploy-first-build-of-application&quot; tabindex=&quot;-1&quot;&gt;Deploy first build of application &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/testing_out_elastic_beanstalk/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To deploy this application to elastic beanstalk, run &lt;code&gt;eb create&lt;/code&gt;. I used the default values for each option in the command prompt:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;$ eb create

Enter Environment Name
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default is simple-app2-dev&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: 
Enter DNS CNAME prefix
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default is simple-app2-dev&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: 

Select a load balancer &lt;span class=&quot;token builtin class-name&quot;&gt;type&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; classic
&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; application
&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; network
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;default is &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;


Would you like to &lt;span class=&quot;token builtin class-name&quot;&gt;enable&lt;/span&gt; Spot Fleet requests &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; this environment? &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;y/N&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;: N&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After running &lt;code&gt;eb create&lt;/code&gt;, the deploy status was logged in the terminal (provided that you didn&#39;t run Ctrl+C).&lt;/p&gt;
&lt;p&gt;The first run did create the environment, but resulted in the following error:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;:59:07    ERROR   Instance deployment failed to generate a &lt;span class=&quot;token string&quot;&gt;&#39;Procfile&#39;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; Node.js. Provide one of these files: &lt;span class=&quot;token string&quot;&gt;&#39;package.json&#39;&lt;/span&gt;, &lt;span class=&quot;token string&quot;&gt;&#39;server.js&#39;&lt;/span&gt;, or &lt;span class=&quot;token string&quot;&gt;&#39;app.js&#39;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt; The deployment failed.
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;:59:09    ERROR   &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;Instance: i-abcef1234&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; Command failed on instance. Return code: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; Output: Engine execution has encountered an error&lt;span class=&quot;token punctuation&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;11&lt;/span&gt;:59:09    INFO    Command execution completed on all instances. Summary: &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;Successful: &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;, Failed: &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;.
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;:00:12    ERROR   Create environment operation is complete, but with errors. For &lt;span class=&quot;token function&quot;&gt;more&lt;/span&gt; information, see troubleshooting documentation.
                                
ERROR: ServiceError - Create environment operation is complete, but with errors. For &lt;span class=&quot;token function&quot;&gt;more&lt;/span&gt; information, see troubleshooting documentation.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;From the output, we can see that the deployment failed due to Elastic Beanstalk not being able to create a Procfile. From this, I learned that you would either need to create a package.json file for your project, or name started file server.js or app.js.&lt;/p&gt;
&lt;p&gt;In my case, what I did is create a Procfile in the route of my directory. And in that file, I specified index.js&lt;/p&gt;
&lt;pre class=&quot;language-text&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;### Contents of Procfile

web: node index.js&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;deploy-new-revision-of-application&quot; tabindex=&quot;-1&quot;&gt;Deploy new revision of application &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/testing_out_elastic_beanstalk/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I then ran &lt;code&gt;eb deploy&lt;/code&gt; to deploy a new revision of my application.&lt;/p&gt;
&lt;p&gt;After adding the Procfile to my project, the deployment completed successfully.&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;$ eb deploy

Creating application version archive &lt;span class=&quot;token string&quot;&gt;&quot;app-***&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
Uploading simple-app2/app-***.zip to S3. This may take a while.
Upload Complete.
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;:14:02    INFO    Environment update is starting.      
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;:14:05    INFO    Deploying new version to instance&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;.
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;:14:14    INFO    Instance deployment completed successfully.
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;:14:19    INFO    New application version was deployed to running EC2 instances.
&lt;span class=&quot;token number&quot;&gt;2023&lt;/span&gt;-12-04 &lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;:14:19    INFO    Environment update completed successfully.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To view an EB application, you can run &lt;code&gt;eb open&lt;/code&gt;. This should open the application URL in a browser. Alternatively, run &lt;code&gt;eb status&lt;/code&gt;. In the command output, you would see the CNAME, is the unique URL to access to your Elastic Beanstalk application.&lt;/p&gt;
&lt;h3 id=&quot;final-update-to-application&quot; tabindex=&quot;-1&quot;&gt;Final update to application &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/testing_out_elastic_beanstalk/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To end off, I made one more change to my index.js file. As seen below, I updated my source code to return the request headers as an HTML response.&lt;/p&gt;
&lt;pre class=&quot;language-js&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; http &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;http&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; host &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&#39;localhost&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; port &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;8080&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;/**
 * Returns the request headers as a response
 */&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token function-variable function&quot;&gt;requestListener&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; res&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; arr &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;of&lt;/span&gt; Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;entries&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;headers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        arr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;p&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;key&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;value&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;/p&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  
  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setHeader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;text/html&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeHead&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;html&gt;&amp;lt;body&gt;&amp;lt;h2&gt;Request Headers&amp;lt;/h2&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;arr&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&amp;lt;/body&gt;&amp;lt;/html&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; server &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; http&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;requestListener&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;port&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; host&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Server is running on http://&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;host&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;port&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As before, I ran &lt;code&gt;eb deploy&lt;/code&gt; to deploy a new revision. Once the deployment completed successfully, I used the CNAME of my EB application test the request on my web browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://domzlab.com/img/test_out_elastic_beanstalk/1_view_response_in_browser.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Thank you for reading.&lt;/p&gt;
&lt;h3 id=&quot;references&quot; tabindex=&quot;-1&quot;&gt;References: &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/testing_out_elastic_beanstalk/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;[1] Install the EB CLI - https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3-install.html&lt;/li&gt;
&lt;li&gt;[2] Deploying an Express application to Elastic Beanstalk - https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/create_deploy_nodejs_express.html&lt;/li&gt;
&lt;li&gt;[3] https://www.digitalocean.com/community/tutorials/how-to-create-a-web-server-in-node-js-with-the-http-module&lt;/li&gt;
&lt;/ul&gt;
</content>
	</entry>
	
	<entry>
		<title>Create 11ty static website from template</title>
		<link href="https://domzlab.com/blog/create-website/"/>
		<updated>2023-12-04T12:50:36Z</updated>
		<id>https://domzlab.com/blog/create-website/</id>
		<content type="html">&lt;h3 id=&quot;introduction&quot; tabindex=&quot;-1&quot;&gt;Introduction &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In this post, I provide an overview of how I used the 11ty base theme as the starting point of this blog.&lt;/p&gt;
&lt;h3 id=&quot;pre-requisites&quot; tabindex=&quot;-1&quot;&gt;Pre Requisites &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To authorize requests to github when running commands from terminal e.g. cloning, git push/pull etc, I am using SSH keys. Ensure that you have configured an SSH key in GitHub.&lt;/p&gt;
&lt;p&gt;To have the same setup on your end, you can follow these guides from the GitHub documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent&quot;&gt;Generate an SSH key&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account&quot;&gt;Add a new SSH key to your GitHub account&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also recommend using VS Code as your code editor. Feel free to use any code/text editor of your choice.&lt;/p&gt;
&lt;h3 id=&quot;create-repository-from-template&quot; tabindex=&quot;-1&quot;&gt;Create Repository from Template &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The template I used for this site is the &lt;a href=&quot;https://github.com/11ty/eleventy-base-blog&quot;&gt;eleventy base blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using the link above to view the eleventy-base-blog in github.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://domzlab.com/img/create_website_blog/1_11ty_base_blog.png&quot; alt=&quot;use template eleventy base blog&quot;&gt;&lt;/p&gt;
&lt;p&gt;Select &lt;em&gt;&lt;strong&gt;Use this template&lt;/strong&gt;&lt;/em&gt; →  &lt;em&gt;&lt;strong&gt;Create a new repository&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;On the &lt;em&gt;&lt;strong&gt;Create a new repository&lt;/strong&gt;&lt;/em&gt; page, specify a name for your name repository. Then select &lt;em&gt;&lt;strong&gt;Create repository&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://domzlab.com/img/create_website_blog/2_create_repository.png&quot; alt=&quot;create new repository from template&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;clone-repository-and-run-server-locally&quot; tabindex=&quot;-1&quot;&gt;Clone repository and run server locally &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;On your local machine, clone the newly created repository in a directory on your choice.&lt;/p&gt;
&lt;p&gt;Command to clone respository to your local machine: &lt;strong&gt;&lt;code&gt;git clone git@github.com:&amp;lt;USER-NAME&amp;gt;/&amp;lt;REPOSITORY-NAME&amp;gt;.git&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before we begin modifying the code, first, we shall run the server locally. Run &lt;strong&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/strong&gt; to install the depdencies.&lt;/p&gt;
&lt;p&gt;Thereafrer, to run the server locally, run &lt;strong&gt;&lt;code&gt;npm start&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id=&quot;update-code-base&quot; tabindex=&quot;-1&quot;&gt;Update code base &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In package.json, update the pathprefix seen in the &lt;strong&gt;build-ghpages&lt;/strong&gt; script to be the same as your respository name:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;build-ghpages&amp;quot;: &amp;quot;npx @11ty/eleventy --pathprefix=/noname-blog/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thereafter, remove &lt;strong&gt;package-lock.json&lt;/strong&gt; from .gitignore.&lt;/p&gt;
&lt;p&gt;In the root of your repository, create a folder named &lt;strong&gt;.github&lt;/strong&gt;. Then, inside that folder, create a sub-directory named &lt;strong&gt;workflows&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Using the YAML below, create the file &lt;em&gt;&lt;strong&gt;.github/workflows/build-and-deploy.yml&lt;/strong&gt;&lt;/em&gt; in the newly created directory.&lt;/p&gt;
&lt;pre class=&quot;language-yaml&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-yaml&quot;&gt;&lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Build and Deploy
&lt;span class=&quot;token key atrule&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;push&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;token key atrule&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;token key atrule&quot;&gt;build-and-deploy&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token key atrule&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ubuntu&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;latest
    &lt;span class=&quot;token key atrule&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Checkout
        &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; actions/checkout@v3

      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Install and Build
        &lt;span class=&quot;token key atrule&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;token scalar string&quot;&gt;
          npm ci
          npm run build-ghpages&lt;/span&gt;

      &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token key atrule&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; Deploy
        &lt;span class=&quot;token key atrule&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; peaceiris/actions&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;gh&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;pages@v3
        &lt;span class=&quot;token key atrule&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;token key atrule&quot;&gt;publish_dir&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ./_site
          &lt;span class=&quot;token key atrule&quot;&gt;github_token&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; secrets.GITHUB_TOKEN &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;deploy-code&quot; tabindex=&quot;-1&quot;&gt;Deploy Code &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;After making the above changes, deploy your code:&lt;/p&gt;
&lt;pre class=&quot;language-sh&quot; tabindex=&quot;0&quot;&gt;&lt;code class=&quot;language-sh&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;token parameter variable&quot;&gt;-A&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; commit &lt;span class=&quot;token parameter variable&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Update package.json. Add build file.&quot;&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; push&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After running the above, navigate to your github respository on github.com. You should then see a red x next to the short code of your most recent commit. You may need to wait for a few more minutes to see this.&lt;/p&gt;
&lt;p&gt;The red x indicates that there was an issue with your most recent build. Select the red x to see more details.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://domzlab.com/img/create_website_blog/4_check_build_result.png&quot; alt=&quot;Build failure about code push&quot;&gt;&lt;/p&gt;
&lt;p&gt;When you select &lt;strong&gt;Details&lt;/strong&gt;, this will take you to the Actions tab, and provide more details regarding why the build failed. In this case, a 403 error was being returned.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://domzlab.com/img/create_website_blog/5_build_failed.png&quot; alt=&quot;Build failure about code push&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;update-permissions&quot; tabindex=&quot;-1&quot;&gt;Update Permissions &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To resolve the error, you will need to go to Settings →  Action → General  →  Workflow permissions  → choose &lt;strong&gt;read and write permissions&lt;/strong&gt; [1].&lt;/p&gt;
&lt;p&gt;Thereafter, re-run your failed build job. To do this, go to Actions, and under All workflow, you should see the build that failed. This would have the same value/name used in your commit message. In my case, this was &lt;strong&gt;Update package.json. Add build file&lt;/strong&gt;. The name of the workflow that run would be the same as the commit message.&lt;/p&gt;
&lt;p&gt;Now, select the workflow that failed to run, then seelect Re-run all jobs. Therefore, the build should complete successfully.&lt;/p&gt;
&lt;p&gt;What you will see is that a new branch named gh-pages got create. This will be branch specified when configuring github pages as described further below.&lt;/p&gt;
&lt;h3 id=&quot;enable-github-pages&quot; tabindex=&quot;-1&quot;&gt;Enable GitHub Pages &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To enable GitHub pages on your GitHub repository, navigate to your respository, and select the &lt;strong&gt;Settings&lt;/strong&gt;. From the left navigation menu, select &lt;strong&gt;Pages&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;On the &lt;strong&gt;GitHub Pages&lt;/strong&gt; settings page that appears, configure the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Source: Deploy from Branch
Branch: gh-pages
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then select save. After some time (waited for a minute or so on my end), refresh the page, and you should then be able to see the link to your static website&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://domzlab.com/img/create_website_blog/7_github_pages_link.png&quot; alt=&quot;GitHub pages link&quot;&gt;&lt;/p&gt;
&lt;p&gt;With that, you have deployed an 11ty website hosted on GitHub pages. You site would look similar to the one shown below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://domzlab.com/img/create_website_blog/8_11ty_site.png&quot; alt=&quot;11ty site&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;references&quot; tabindex=&quot;-1&quot;&gt;References &lt;a class=&quot;header-anchor&quot; href=&quot;https://domzlab.com/blog/create-website/&quot;&gt;#&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;[1] “Permission denied to github-actions[bot]. The requested URL returned error: 403,” Stack Overflow. https://stackoverflow.com/questions/73687176/permission-denied-to-github-actionsbot-the-requested-url-returned-error-403 (accessed Sep. 05, 2023).&lt;/p&gt;
</content>
	</entry>
</feed>
